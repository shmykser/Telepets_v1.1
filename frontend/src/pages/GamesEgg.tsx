import { useRef, useState } from 'react'
import { Button } from '@/components/ui/Button'
import { X } from 'lucide-react'

export default function GamesEgg() {
  const [started, setStarted] = useState(false)
  const [confirmExit, setConfirmExit] = useState(false)
  const containerRef = useRef<HTMLDivElement | null>(null)

  const handleStart = async () => {
    setStarted(true)
    try {
      const el = containerRef.current
      if (el && el.requestFullscreen) {
        await el.requestFullscreen().catch(() => {})
      }
      // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ñ–æ–Ω–∞
      document.body.style.overflow = 'hidden'
    } catch {}
  }

  const exitGame = async () => {
    setConfirmExit(false)
    setStarted(false)
    try {
      if (document.fullscreenElement) {
        await document.exitFullscreen().catch(() => {})
      }
    } catch {}
    document.body.style.overflow = ''
  }

  return (
    <div className="p-4">
      {!started && (
        <div className="flex items-center justify-center">
          <Button size="lg" onClick={handleStart}>–°—Ç–∞—Ä—Ç</Button>
        </div>
      )}

      {started && (
        <div
          ref={containerRef}
          className="fixed inset-0 z-[900] bg-background"
          style={{ paddingTop: 'var(--tg-safe-top, 0px)', paddingBottom: 'var(--tg-safe-bottom, 0px)' }}
        >
          {/* –ö—Ä–µ—Å—Ç–∏–∫ –≤—ã—Ö–æ–¥–∞ */}
          <button
            type="button"
            className="absolute top-3 right-3 z-[950] p-2 rounded-md bg-surface/80 border border-border text-slate-200 hover:bg-surface pointer-events-auto"
            onClick={() => setConfirmExit(true)}
            onTouchStart={() => setConfirmExit(true)}
          >
            <X size={20} />
          </button>

          {/* –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞) */}
          <div className="absolute inset-0 z-[900] pointer-events-none">
            {/* –Ø–π—Ü–æ —Å–Ω–∏–∑—É –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
            <div className="absolute left-1/2 -translate-x-1/2" style={{ bottom: 'calc(16px + var(--tg-safe-bottom, 0px))' }}>
              <div className="text-6xl select-none">ü•ö</div>
            </div>
          </div>

          {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π –º–æ–¥–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ */}
          {confirmExit && (
            <div className="fixed inset-0 z-[2000] flex items-center justify-center">
              <div className="absolute inset-0 bg-black/60" onClick={() => setConfirmExit(false)} />
              <div className="relative z-[2001] w-[92%] max-w-sm rounded-lg border border-border bg-background p-5 shadow-xl">
                <div className="text-lg font-semibold">–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã?</div>
                <p className="mt-1 text-sm text-slate-400">–ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã—Ö–æ–¥?</p>
                <div className="mt-4 flex gap-2 justify-end">
                  <Button variant="outline" onClick={() => setConfirmExit(false)}>–û—Ç–º–µ–Ω–∞</Button>
                  <Button onClick={exitGame}>–í—ã–π—Ç–∏</Button>
                </div>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  )
}


