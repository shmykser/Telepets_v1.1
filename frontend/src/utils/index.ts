// –°–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å–ª–æ–π —É—Ç–∏–ª–∏—Ç, –∑–∞–º–µ—â–∞—é—â–∏–π '@/lib/utils'

export function cn(...classes: Array<string | undefined | false | null>): string {
  return classes.filter(Boolean).join(' ');
}

export function getStoredUserId(): string {
  if (typeof localStorage === 'undefined') return 'default_user';
  return localStorage.getItem('user_id') || 'default_user';
}

export function setStoredUserId(userId: string): void {
  try {
    localStorage.setItem('user_id', userId);
  } catch {}
}

export function getHealthColor(value: number): string {
  if (value <= 20) return 'health-critical';
  if (value <= 50) return 'health-low';
  return 'health-ok';
}

export function getHealthText(value: number): string {
  if (value <= 0) return '–ü–∏—Ç–æ–º–µ—Ü –º–µ—Ä—Ç–≤';
  if (value <= 20) return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ';
  if (value <= 50) return '–ù—É–∂–Ω–∞ –∑–∞–±–æ—Ç–∞';
  return '–ß—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ';
}

type StageKey = 'egg' | 'baby' | 'adult' | string;
export function getStageInfo(stage: StageKey): { name: string; description: string; emoji: string; color: string } {
  switch (stage) {
    case 'egg':
      return { name: '–Ø–π—Ü–æ', description: '–ó–∞–±–æ—Ç–∞ –∏ —Ç–µ–ø–ª–æ –ø–æ–º–æ–≥—É—Ç', emoji: 'ü•ö', color: 'from-blue-300 to-blue-500 bg-gradient-to-r' };
    case 'baby':
      return { name: '–î–µ—Ç–µ–Ω—ã—à', description: '–ö–æ—Ä–º–ª–µ–Ω–∏–µ –∏ —É—Ö–æ–¥ –≤–∞–∂–Ω—ã', emoji: 'üçº', color: 'from-emerald-300 to-emerald-500 bg-gradient-to-r' };
    case 'adult':
      return { name: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ù—É–∂–Ω—ã —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', emoji: 'ü¶¥', color: 'from-purple-300 to-purple-500 bg-gradient-to-r' };
    default:
      return { name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', description: '–°—Ç–∞–¥–∏—è –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞', emoji: '‚ùì', color: 'from-slate-300 to-slate-500 bg-gradient-to-r' };
  }
}

export function formatTime(totalSeconds: number): string {
  const s = Math.max(0, Math.floor(totalSeconds));
  const m = Math.floor(s / 60);
  const sec = s % 60;
  return `${m}:${sec.toString().padStart(2, '0')}`;
}

export function formatDate(iso?: string): string {
  if (!iso) return '';
  try {
    const d = new Date(iso);
    return d.toLocaleString();
  } catch {
    return iso;
  }
}

export function getActionCost(stage: StageKey): number {
  // –ë–∞–∑–æ–≤—ã–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å backend/config/settings.py ACTION_COSTS
  if (stage === 'egg') return 5;
  if (stage === 'baby') return 10;
  if (stage === 'adult') return 20;
  return 10;
}


